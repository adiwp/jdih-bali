# Docker Compose for JDIH CMS with FrankenPHP
version: '3.8'

services:
  app:
    image: dunglas/frankenphp:php8.3-alpine
    container_name: jdih-cms-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "${OCTANE_PORT:-8000}:8000"
    volumes:
      - .:/var/www/html:cached
      - ./storage:/var/www/html/storage:delegated
      - ./bootstrap/cache:/var/www/html/bootstrap/cache:delegated
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_KEY=${APP_KEY}
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - OCTANE_SERVER=frankenphp
      - FRANKENPHP_CONFIG=worker ./artisan octane:frankenphp
    depends_on:
      - mysql
      - redis
    command: ["frankenphp", "octane", "--host=0.0.0.0", "--port=8000"]
    networks:
      - jdih-network

  mysql:
    image: mysql:8.0
    container_name: jdih-cms-mysql
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - jdih-network

  redis:
    image: redis:7-alpine
    container_name: jdih-cms-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - jdih-network

  # Optional: Caddy as reverse proxy for production
  caddy:
    image: caddy:alpine
    container_name: jdih-cms-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app
    networks:
      - jdih-network
    profiles:
      - production

volumes:
  mysql_data:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  jdih-network:
    driver: bridge